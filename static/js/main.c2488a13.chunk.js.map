{"version":3,"sources":["Button.js","Timer.js","Input.js","App.js","index.js"],"names":["Button","secs","minutes","styles","type","hours","useState","seconds","timeLeft","setTimeLeft","countDown","className","onClick","time","setInterval","Timer","hrs","mins","console","log","updateTime","push","Math","floor","parseInt","Input","setMinutes","for","value","id","onChange","e","event","preventDefault","target","minuteChange","App","ReactDOM","render","document","getElementById"],"mappings":"8LAEe,SAASA,EAAT,GAAkD,IAEzDC,EAFyBC,EAA+B,EAA/BA,QAAQC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAAS,EAI5BC,mBAAS,CACrCD,MAAOA,EACPH,QAASA,EACTK,QAAS,KAP+C,mBAIrDC,EAJqD,KAI3CC,EAJ2C,KAkCtDC,EAAY,WAGF,KAFZT,EAAOO,EAASD,QAAU,IAGtBE,EAAY,CAACP,QAASA,EAAU,IAGrB,IAAZA,GACCO,EAAY,CAAEJ,MAAO,IAGzBI,EAAY,CAACF,QAASN,KAG1B,OACI,wBAAQU,UAAS,UAAKR,GAAUS,QAvCpB,SAACC,GACD,UAATT,GACCU,aAAY,WACTJ,MACA,KAGK,SAATN,GACCK,EAAY,CACRJ,MAAOA,EACPH,QAASA,EAAU,EACnBK,QAASN,IAIL,UAATG,GACCK,EAAY,CACRJ,MAAO,EACPH,QAAS,EACTK,QAAS,KAoBjB,SACKH,ICjDE,SAASW,EAAT,GAA2B,IAIlCC,EAAKC,EAAMhB,EAJYC,EAAU,EAAVA,QAE3BgB,QAAQC,IAAIjB,GAGZ,IAAIW,EAAO,GAGXO,EAAa,SAAClB,GACV,OAAGA,EAAU,KAAO,GAChBc,EAAMd,EAAU,GAChBe,EAAO,EACPhB,EAAO,EACPY,EAAKQ,KAAKL,EAAKC,EAAMhB,GACdY,IAEPG,EAAMM,KAAKC,MAAMrB,EAAU,IAC3Be,EAAOf,EAAU,GACjBD,EAAO,EACPY,EAAKQ,KAAKL,EAAKC,EAAMhB,GACdY,IAIfK,QAAQC,IAAIC,EAAWlB,IAxBc,MA2BHI,mBAASkB,SAASJ,EAAWlB,EAAQ,MA3BlC,gCA6BCI,mBAASc,EAAWlB,EAAQ,MA7B7B,gCA+BCI,mBAAS,KA/BV,6BA8CrC,OACI,sBAAKK,UAAU,6BAAf,UACI,+BACI,sBAAMA,UAAU,OAAhB,SAAwBT,EAAUkB,EAAWlB,GAAS,GAAK,MAAQ,SACnE,sBAAMS,UAAU,OAAhB,SAAwBT,EAAUkB,EAAWlB,GAAS,GAAK,MAAQ,UACnE,sBAAMS,UAAU,OAAhB,SAAwBT,EAAUkB,EAAWlB,GAAS,GAAK,WAE/D,sBAAKS,UAAU,aAAf,UACI,cAACX,EAAD,CAAQE,QAASe,EAAMZ,MAAOW,EAAKZ,KAAK,QAAQD,OAAO,yGACvD,cAACH,EAAD,CAAQE,QAASe,EAAMZ,MAAOW,EAAKZ,KAAK,OAAOD,OAAO,kGACtD,cAACH,EAAD,CAAQE,QAASe,EAAMZ,MAAOW,EAAKZ,KAAK,QAAQD,OAAO,+GCxDxD,SAASsB,IAAS,IAAD,EAEEnB,mBAAS,GAFX,mBAErBJ,EAFqB,KAEZwB,EAFY,KAa5B,OACI,sBAAKf,UAAU,6BAAf,UACI,uBAAOA,UAAU,sCAAsCgB,IAAI,MAA3D,iCAGA,uBAAOhB,UAAU,iDAAiDiB,MAAO1B,EAAS2B,GAAG,MAAMC,SAAU,SAACC,GAAD,OAdxF,SAACC,GAElB,IAAIJ,EADJI,EAAMC,iBAGNL,EAAQI,EAAME,OAAON,MAErBF,EAAWE,GAQqGO,CAAaJ,MAEzH,cAAChB,EAAD,CAAOb,QAASA,OCZbkC,MARf,WACE,OACE,qBAAKzB,UAAU,IAAf,SACI,cAACc,EAAD,OCDRY,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c2488a13.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nexport default function Button({ minutes,styles, type, hours }) {\r\n\r\n    let secs;\r\n\r\n    const [timeLeft, setTimeLeft] = useState({\r\n        hours: hours,\r\n        minutes: minutes,\r\n        seconds: 60\r\n    })\r\n\r\n    const onClick = (time) => {\r\n        if(type === \"Start\") {\r\n            setInterval(() => {\r\n               countDown()\r\n            }, 1000)\r\n        }\r\n\r\n        if(type === \"Stop\") {\r\n            setTimeLeft({\r\n                hours: hours,\r\n                minutes: minutes - 1,\r\n                seconds: secs\r\n            })\r\n        }\r\n\r\n        if(type === \"Reset\") {\r\n            setTimeLeft({\r\n                hours: 0,\r\n                minutes: 0,\r\n                seconds: 0,\r\n            })\r\n        }\r\n    }\r\n\r\n    const countDown = () => {\r\n        secs = timeLeft.seconds - 1;\r\n\r\n        if(secs === 0) {\r\n            setTimeLeft({minutes: minutes - 1})\r\n        }\r\n\r\n        if(minutes === 0) {\r\n            setTimeLeft({ hours: 0});\r\n        }\r\n\r\n        setTimeLeft({seconds: secs})\r\n    }\r\n\r\n    return (\r\n        <button className={`${styles}`} onClick={onClick}>\r\n            {type}\r\n        </button>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport Button from \"./Button\";\r\n\r\nexport default function Timer({minutes}) {\r\n\r\n    console.log(minutes)\r\n\r\n    let hrs, mins, secs;\r\n    let time = [],\r\n\r\n\r\n    updateTime = (minutes) => {\r\n        if(minutes % 60 === 0) {\r\n            hrs = minutes / 60;\r\n            mins = 0;\r\n            secs = 0;\r\n            time.push(hrs, mins, secs);\r\n            return time;\r\n        } else {\r\n            hrs = Math.floor(minutes / 60);\r\n            mins = minutes % 60;\r\n            secs = 0;\r\n            time.push(hrs, mins, secs);\r\n            return time;\r\n        }\r\n    } \r\n\r\n    console.log(updateTime(minutes))\r\n\r\n    \r\n    const [hoursLeft, setHoursLeft] = useState(parseInt(updateTime(minutes[0])));\r\n\r\n    const [minutesLeft, setMinutesLeft] = useState(updateTime(minutes[1]));\r\n\r\n    const [secondsLeft, setSecondsLeft] = useState(60);\r\n\r\n    const countDown = () => {\r\n        secs = secondsLeft - 1;\r\n        hrs = updateTime(minutes)[0];\r\n        mins = updateTime(minutes)[1];\r\n        // if(secs === 0) {\r\n        //     setMinutesLeft(updateTime(minutes)[1] - 1);\r\n        // }\r\n\r\n        // if(minutes === 0) {\r\n        //     setHoursLeft(updateTime(minutes)[0] - 1);\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center\">\r\n            <h1>\r\n                <span className=\"mr-1\">{minutes ? updateTime(minutes)[0] + \" : \" : \"HH :\"}</span>\r\n                <span className=\"ml-1\">{minutes ? updateTime(minutes)[1] + \" : \" : \" MM :\"}</span>\r\n                <span className=\"ml-1\">{minutes ? updateTime(minutes)[2] : \" SS\"}</span>\r\n            </h1>\r\n            <div className=\"block mt-6\">\r\n                <Button minutes={mins} hours={hrs} type=\"Start\" styles=\"focus:outline-none px-4 py-2 mx-3 hover:bg-blue-600 rounded-lg bg-blue-300 border-2 text-sm font-lg \" />\r\n                <Button minutes={mins} hours={hrs} type=\"Stop\" styles=\"focus:outline-none px-4 py-2 hover:bg-red-600 rounded-lg bg-red-300 border-2 text-sm font-lg \" />\r\n                <Button minutes={mins} hours={hrs} type=\"Reset\" styles=\"focus:outline-none px-4 py-2 ml-3 hover:bg-gray-600 rounded-lg bg-gray-300 border-2 text-sm font-lg \" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport Timer from \"./Timer\"\r\n\r\nexport default function Input() {\r\n\r\n    const [minutes, setMinutes] = useState(0)\r\n\r\n    const minuteChange = (event) => {\r\n        event.preventDefault();\r\n        let value;\r\n\r\n        value = event.target.value;\r\n\r\n        setMinutes(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center\">\r\n            <label className=\"pl-4 text-lg font-lg tracking-wider\" for=\"min\">\r\n                Enter the Minutes :      \r\n            </label>\r\n            <input className=\"rounded-lg border-2 border-gray py-1 px-2 my-3\" value={minutes} id=\"min\" onChange={(e) => minuteChange(e)} />\r\n\r\n            <Timer minutes={minutes} />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport Input from \"./Input\";\n\nfunction App() {\n  return (\n    <div className=\" \">\n        <Input />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}